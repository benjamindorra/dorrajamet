// Generated by dia2code
#ifndef STATE__PROVINCE__H
#define STATE__PROVINCE__H

#include <string>

namespace state {
  class Levy;
}

#include "Levy.h"

namespace state {

  /// class Province - 
  class Province {
    // Associations
    // Attributes
  private:
    std::string id;
    std::string name;
    /// int value of the unique color code of the province (for ui purposes)
    unsigned int colorCode;
    /// Ranges from 0 to 100. Represent the current development status of the province. The player can spend money to raise this value. Increase this value will offer better levies and tax income. Later we could replace that with a list of improvable buildings that will have more specific modifiers on the province.
    unsigned char development;
    /// Representing the prosperity/devastation of the province (impacts the taxes and levies). Ranges from -100 (total devastation) to 100 (maximum prosperity).
    char prosperity;
    /// Base values used to compute the available levies of this province.
    Levy baseLevy;
    /// Levy of the province.
    Levy levy;
    /// Base values used to compute tax income.
    unsigned int baseTaxIncome;
    /// Tax income from this province for a turn.
    unsigned int taxIncome;
    /// x position for display of armies 
    int dispPosX;
    /// y position for display of armies
    int dispPosY;
    // Operations
  public:
    Province ();
    Province (std::string strJson);
    ~Province ();
    bool checkConsistency ();
    void debug ();
    int getLevyMen ();
    void killMenFromLevy (int victims);
    void disbandLevy ();
    // Setters and Getters
  };

};

#endif
