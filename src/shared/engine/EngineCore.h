// Generated by dia2code
#ifndef ENGINE__ENGINECORE__H
#define ENGINE__ENGINECORE__H

#include <queue>
#include <state.h>
#include <string>
#include <json.hpp>

namespace engine {
  class Command;
}

#include "Command.h"

namespace engine {

  /// class EngineCore - 
  class EngineCore {
    // Associations
    // Attributes
  public:
    std::queue<Command> * commands;
    state::GameState * gameState;
    // Operations
  public:
    EngineCore ();
    EngineCore (state::GameState * gameState);
    EngineCore (state::GameState * gameState, std::queue<Command> * events);
    ~EngineCore ();
    int mainLoop ();
    void pushCommand (Command command);
    void processCommand (Command command);
    void endWar (std::string warId, std::string winner);
    void turnButton ();
    void endTurn ();
    void moveArmy (std::string arguments);
    void claim (std::string arguments);
    void war (std::string arguments);
    void peace (std::string arguments);
    void surrender (std::string arguments);
    void okButton (std::string arguments);
    void yesButton (std::string arguments);
    void noButton (std::string arguments);
    void processSurrenderMessageReply (bool repliedYes, std::string arguments, nlohmann::json message);
    void processPeaceMessageReply (bool repliedYes, std::string arguments, nlohmann::json message);
    void createArmy (std::string arguments);
    // Setters and Getters
  };

};

#endif
